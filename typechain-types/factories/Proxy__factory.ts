/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Proxy, ProxyInterface } from "../Proxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calculateValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610584806100616000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633659cfe6146100515780635c60da1b1461006d5780638da5cb5b1461008b578063e35b0297146100a9575b600080fd5b61006b60048036038101906100669190610348565b6100d9565b005b61007561013f565b604051610082919061043c565b60405180910390f35b610093610163565b6040516100a0919061043c565b60405180910390f35b6100c360048036038101906100be919061039a565b610189565b6040516100d09190610457565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013357600080fd5b61013c816102c6565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1685856040516024016101d9929190610472565b6040516020818303038152906040527f96814e6f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102639190610425565b600060405180830381855af49150503d806000811461029e576040519150601f19603f3d011682016040523d82523d6000602084013e6102a3565b606091505b5091509150808060200190518101906102bc9190610371565b9250505092915050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061031881610520565b92915050565b60008135905061032d81610537565b92915050565b60008151905061034281610537565b92915050565b60006020828403121561035a57600080fd5b600061036884828501610309565b91505092915050565b60006020828403121561038357600080fd5b600061039184828501610333565b91505092915050565b600080604083850312156103ad57600080fd5b60006103bb8582860161031e565b92505060206103cc8582860161031e565b9150509250929050565b6103df816104b1565b82525050565b60006103f08261049b565b6103fa81856104a6565b935061040a8185602086016104ed565b80840191505092915050565b61041f816104e3565b82525050565b600061043182846103e5565b915081905092915050565b600060208201905061045160008301846103d6565b92915050565b600060208201905061046c6000830184610416565b92915050565b60006040820190506104876000830185610416565b6104946020830184610416565b9392505050565b600081519050919050565b600081905092915050565b60006104bc826104c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561050b5780820151818401526020810190506104f0565b8381111561051a576000848401525b50505050565b610529816104b1565b811461053457600080fd5b50565b610540816104e3565b811461054b57600080fd5b5056fea26469706673582212207d74814b179342a88d0e411943bfb3fc85db2f1c68832a89bee7691e9ff28c4564736f6c63430008000033";

type ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proxy__factory extends ContractFactory {
  constructor(...args: ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Proxy> {
    return super.deploy(overrides || {}) as Promise<Proxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Proxy {
    return super.attach(address) as Proxy;
  }
  connect(signer: Signer): Proxy__factory {
    return super.connect(signer) as Proxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyInterface {
    return new utils.Interface(_abi) as ProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {
    return new Contract(address, _abi, signerOrProvider) as Proxy;
  }
}
