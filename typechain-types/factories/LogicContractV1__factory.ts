/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LogicContractV1,
  LogicContractV1Interface,
} from "../LogicContractV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "user",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061038c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806332bb2c0d146100465780634f8632ba146100765780636e008b3514610094575b600080fd5b610060600480360381019061005b91906101c5565b6100b2565b60405161006d919061023a565b60405180910390f35b61007e610184565b60405161008b919061021f565b60405180910390f35b61009c6101aa565b6040516100a9919061023a565b60405180910390f35b600081836100c0919061027e565b6000819055508260005410156100ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f7afbe4f1c55b5f72ea356f5b4d5615831867af31454a5ca5557f315e6d11a3698383604051610130929190610255565b60405180910390a133600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600054905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000813590506101bf8161033f565b92915050565b600080604083850312156101d857600080fd5b60006101e6858286016101b0565b92505060206101f7858286016101b0565b9150509250929050565b61020a816102d4565b82525050565b61021981610306565b82525050565b60006020820190506102346000830184610201565b92915050565b600060208201905061024f6000830184610210565b92915050565b600060408201905061026a6000830185610210565b6102776020830184610210565b9392505050565b600061028982610306565b915061029483610306565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102c9576102c8610310565b5b828201905092915050565b60006102df826102e6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61034881610306565b811461035357600080fd5b5056fea26469706673582212209e900d6a3d15f5424f20da5fe889c96c37e5b7b2c870b62d4248a53ec0db273664736f6c63430008000033";

type LogicContractV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogicContractV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LogicContractV1__factory extends ContractFactory {
  constructor(...args: LogicContractV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LogicContractV1> {
    return super.deploy(overrides || {}) as Promise<LogicContractV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LogicContractV1 {
    return super.attach(address) as LogicContractV1;
  }
  connect(signer: Signer): LogicContractV1__factory {
    return super.connect(signer) as LogicContractV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogicContractV1Interface {
    return new utils.Interface(_abi) as LogicContractV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LogicContractV1 {
    return new Contract(address, _abi, signerOrProvider) as LogicContractV1;
  }
}
